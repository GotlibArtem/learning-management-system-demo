name: CI

on:
  push:
    branches:
      - master
      - main
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-24.04

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: build
        uses: ./.github/actions/build

      - name: lint
        run: make lint

  test:
    needs: lint
    runs-on: ubuntu-24.04

    services:
      postgres:
        image: postgres:16.1-alpine
        env:
          POSTGRES_PASSWORD: secret
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7.2.3-alpine
        ports:
          - 6379:6379

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: build
        uses: ./.github/actions/build

      - name: install locale stuff
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: locales-all gettext
          version: 1

      - name: get number of cpu cores
        uses: SimenB/github-actions-cpu-cores@v2.0.0
        id: cpu-cores

      - name: test
        env:
          DATABASE_URL: postgres://postgres:secret@localhost:5432/postgres
        run: make test -e SIMULTANEOS_TEST_JOBS=${{ steps.cpu-cores.outputs.count }}

  build-docker-image:
    needs: test
    runs-on: ubuntu-24.04

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: build
        uses: ./.github/actions/build

      - name: setup qemu
        uses: docker/setup-qemu-action@v3

      - name: setup buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build web backend image
        uses: docker/build-push-action@v6
        with:
          context: .
          target: web
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: |
            ghcr.io/art-lms/lms-backend:latest
            ghcr.io/art-lms/lms-backend:${{ github.sha }}
          build-args: |
            PYTHON_VERSION=${{ env.python-version }}
            RELEASE=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build web worker image
        uses: docker/build-push-action@v6
        with:
          context: .
          target: worker
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: |
            ghcr.io/art-lms/lms-worker:latest
            ghcr.io/art-lms/lms-worker:${{ github.sha }}
          build-args: |
            PYTHON_VERSION=${{ env.python-version }}
            RELEASE=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build web worker bigquery image
        uses: docker/build-push-action@v6
        with:
          context: .
          target: worker-bigquery
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: |
            ghcr.io/art-lms/lms-worker-bigquery:latest
            ghcr.io/art-lms/lms-worker-bigquery:${{ github.sha }}
          build-args: |
            PYTHON_VERSION=${{ env.python-version }}
            RELEASE=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build web scheduler image
        uses: docker/build-push-action@v6
        with:
          context: .
          target: scheduler
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: |
            ghcr.io/art-lms/lms-scheduler:latest
            ghcr.io/art-lms/lms-scheduler:${{ github.sha }}
          build-args: |
            PYTHON_VERSION=${{ env.python-version }}
            RELEASE=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-docker-image
    if: github.ref == 'refs/heads/master' && github.repository_owner == 'art-lms'
    runs-on: ubuntu-24.04
    steps:
      - name: Update backend image
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: docker service update lms_backend --image ghcr.io/art-lms/lms-backend:${{ github.sha }} --with-registry-auth && docker stack ps lms -f "desired-state=running" | grep "ghcr.io/art-lms/lms/lms-backend:${{ github.sha }}" || exit 127

      - name: Update celery worker image
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: docker service update lms_worker --image ghcr.io/art-lms/lms-worker:${{ github.sha }} --with-registry-auth && docker stack ps lms -f "desired-state=running" | grep "ghcr.io/art-lms/lms/lms-worker:${{ github.sha }}" || exit 127

      - name: Update celery worker bigquery image
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: docker service update lms_worker_bigquery --image ghcr.io/art-lms/lms-worker-bigquery:${{ github.sha }} --with-registry-auth && docker stack ps lms -f "desired-state=running" | grep "ghcr.io/art-lms/lms/lms-worker-bigquery:${{ github.sha }}" || exit 127

      - name: Update celery scheduler image
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: docker service update lms_scheduler --image ghcr.io/art-lms/lms-scheduler:${{ github.sha }} --with-registry-auth && docker stack ps lms -f "desired-state=running" | grep "ghcr.io/art-lms/lms/lms-scheduler:${{ github.sha }}" || exit 127
