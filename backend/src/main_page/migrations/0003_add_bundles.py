# Generated by Django 4.2.16 on 2024-12-03 08:26

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ("courses", "0008_default_sorting_positions_stars_at_one"),
        ("main_page", "0002_main_page_content"),
    ]

    operations = [
        migrations.CreateModel(
            name="CourseBundleContent",
            fields=[
                (
                    "main_page_content",
                    models.OneToOneField(
                        db_column="id",
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        related_name="%(class)s",
                        serialize=False,
                        to="main_page.mainpagecontent",
                    ),
                ),
                (
                    "orientation",
                    models.CharField(
                        choices=[("portrait", "Portrait"), ("landscape", "Landscape"), ("landscape-large", "Landscape large")],
                        max_length=20,
                        verbose_name="Orientation",
                    ),
                ),
                ("slug", models.SlugField(max_length=255, unique=True)),
            ],
            options={
                "verbose_name": "Course bundle content item",
                "verbose_name_plural": "Course bundle content list",
                "ordering": ["position_on_page", "created"],
            },
            bases=("main_page.mainpagecontent", models.Model),
        ),
        migrations.CreateModel(
            name="LessonBundleContent",
            fields=[
                (
                    "main_page_content",
                    models.OneToOneField(
                        db_column="id",
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        related_name="%(class)s",
                        serialize=False,
                        to="main_page.mainpagecontent",
                    ),
                ),
                ("slug", models.SlugField(max_length=255, unique=True)),
            ],
            options={
                "verbose_name": "Lesson bundle content item",
                "verbose_name_plural": "Lesson bundle content list",
                "ordering": ["position_on_page", "created"],
            },
            bases=("main_page.mainpagecontent", models.Model),
        ),
        migrations.CreateModel(
            name="LessonBundleItem",
            fields=[
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("modified", models.DateTimeField(blank=True, db_index=True, null=True)),
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("position_in_lesson_bundle", models.PositiveSmallIntegerField(db_index=True, default=1, verbose_name="Position in lessons bundle")),
                (
                    "bundle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="items", to="main_page.lessonbundlecontent", verbose_name="Lesson bundle"
                    ),
                ),
                (
                    "lesson",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="lesson_bundle_items", to="courses.lesson", verbose_name="Lesson"
                    ),
                ),
            ],
            options={
                "verbose_name": "Lesson bundle item",
                "verbose_name_plural": "Lesson bundle items",
                "ordering": ["position_in_lesson_bundle"],
            },
        ),
        migrations.CreateModel(
            name="CourseBundleItem",
            fields=[
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("modified", models.DateTimeField(blank=True, db_index=True, null=True)),
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("position_in_course_bundle", models.PositiveSmallIntegerField(db_index=True, default=1, verbose_name="Position in course bundle")),
                (
                    "bundle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="items", to="main_page.coursebundlecontent", verbose_name="Course bundle"
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="lesson_bundle_items",
                        to="courses.course",
                        verbose_name="Course",
                    ),
                ),
                (
                    "course_collection",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="lesson_bundle_items",
                        to="courses.coursecollection",
                        verbose_name="Course collection",
                    ),
                ),
            ],
            options={
                "verbose_name": "Course bundle item",
                "verbose_name_plural": "Course bundle items",
                "ordering": ["position_in_course_bundle"],
            },
        ),
        migrations.AddConstraint(
            model_name="lessonbundleitem",
            constraint=models.UniqueConstraint(fields=("bundle", "lesson"), name="unique_lesson_per_bundle"),
        ),
        migrations.AddConstraint(
            model_name="coursebundleitem",
            constraint=models.CheckConstraint(
                check=models.Q(("course", None), ("course_collection", None), _connector="XOR"), name="course_or_course_collection_specified"
            ),
        ),
        migrations.AddConstraint(
            model_name="coursebundleitem",
            constraint=models.UniqueConstraint(fields=("bundle", "course"), name="unique_course_per_bundle"),
        ),
        migrations.AddConstraint(
            model_name="coursebundleitem",
            constraint=models.UniqueConstraint(fields=("bundle", "course_collection"), name="unique_course_collection_per_bundle"),
        ),
    ]
